 /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package src.frames.tabs;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.util.ArrayList;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import src.frames.Frame;
import src.frames.Alert;
import src.models.user;
import src.util.*;

/**
 *
 * Admin Tab
 */
public class Admin extends javax.swing.JPanel {

    /**
     * Create a new Frame to use the font function
     */
    Frame Frame = new Frame();

    /**
     * The user that the admin edit
     */
    user newUser;

    /**
     * The admin
     */
    public user loginUser;

    /**
     * true when the combobox is filled, otherwise false
     */
    boolean loaded = false;

    /**
     * the cardlayout of the mainPanel
     */
    public CardLayout card;
    /**
     * Constructor to create a new Admin Tab
     */
    public Admin() {
        initComponents();
        card = (CardLayout)mainPanel.getLayout();
        background.setRound(50);
        choosePanel.setRound(50);
        Frame.dispose();
    }

    /**
     * font function used to init the Componenets with a modern Font
     * @param size of the font
     * @return
     */
    public Font fnt(float size){
        return Frame.fnt(size);
    }
    
    /**
     * load all users into the combobox and reset all components
     * we cant init the values in the constructor because the netbeans gui builder doesent allow custom parameters
     * @param user
     */
    public void init(user user){
        this.loginUser = user;
        loaded = false;
        lblErrorUserPanel.setVisible(false);
        lblErrorHealthPanel.setVisible(false);
        lblErroraccessDataPanel.setVisible(false);
        lblErroraccessDataPanel.setForeground(new java.awt.Color(205, 61, 100));
        chooserProfil.removeAllItems();
        mainPanel.setVisible(false);
        background.setBackground(new Color(248,249,254));
        btnDelete.setVisible(false);
        chooserProfil.addItem("---");
        ArrayList<String> users = database.getUsersAsString();
        for (int i = 0; i < users.size(); i++){
            chooserProfil.addItem(users.get(i));
        }
        loaded = true;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupGender = new javax.swing.ButtonGroup();
        groupInsuranceType = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        background = new src.frames.components.background();
        mainPanel = new javax.swing.JPanel();
        AdminUserProfile = new javax.swing.JPanel();
        btnNextUserPanel = new src.frames.components.button();
        lblFirstname = new javax.swing.JLabel();
        lblLastname = new javax.swing.JLabel();
        txtFirstname = new src.frames.components.textfield();
        sepFirstname = new javax.swing.JSeparator();
        txtLastname = new src.frames.components.textfield();
        sepLastname = new javax.swing.JSeparator();
        lblStreet = new javax.swing.JLabel();
        lblHousenumber = new javax.swing.JLabel();
        lblZipcode = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtStreet = new src.frames.components.textfield();
        sepStreet = new javax.swing.JSeparator();
        txtHousenumber = new src.frames.components.textfield();
        sepHousenumber = new javax.swing.JSeparator();
        txtZipcode = new src.frames.components.textfield();
        sepZipcode = new javax.swing.JSeparator();
        txtCity = new src.frames.components.textfield();
        sepCity = new javax.swing.JSeparator();
        lblGender = new javax.swing.JLabel();
        jRadioMale = new javax.swing.JRadioButton();
        jRadioFemale = new javax.swing.JRadioButton();
        jRadioDiverse = new javax.swing.JRadioButton();
        lblDateOfBirth = new javax.swing.JLabel();
        txtDateOfBirth = new src.frames.components.textfield();
        sepDateOfBirth = new javax.swing.JSeparator();
        lblErrorUserPanel = new javax.swing.JLabel();
        btnPDFExport = new src.frames.components.button();
        healthPanel = new javax.swing.JPanel();
        btnBackHealthPanel = new src.frames.components.button();
        lblInsurancename = new javax.swing.JLabel();
        txtInsurancename = new src.frames.components.textfield();
        sepInsurancename = new javax.swing.JSeparator();
        lblInsurancetype = new javax.swing.JLabel();
        jRadioPublic = new javax.swing.JRadioButton();
        jRadioPrivate = new javax.swing.JRadioButton();
        lblHealthInformation = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtHealthInformation = new javax.swing.JTextArea();
        lblErrorHealthPanel = new javax.swing.JLabel();
        btnNextHealthPanel = new src.frames.components.button();
        accessDataPanel = new javax.swing.JPanel();
        btnBackaccessDataPanel = new src.frames.components.button();
        btnUpdate = new src.frames.components.button();
        sepEmail = new javax.swing.JSeparator();
        sepPasswordConfirm = new javax.swing.JSeparator();
        lblEmail = new javax.swing.JLabel();
        txtPasswordConfirm = new src.frames.components.passwordfield();
        lblPasswordConfirm = new javax.swing.JLabel();
        txtEmail = new src.frames.components.textfield();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new src.frames.components.textfield();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new src.frames.components.passwordfield();
        sepPassword = new javax.swing.JSeparator();
        sepUsername = new javax.swing.JSeparator();
        lblErroraccessDataPanel = new javax.swing.JLabel();
        lblHeader = new javax.swing.JLabel();
        choosePanel = new src.frames.components.background();
        chooserProfil = new javax.swing.JComboBox<>();
        lblSelectUser = new javax.swing.JLabel();
        btnDelete = new src.frames.components.button();

        setBackground(new java.awt.Color(248, 249, 254));

        jPanel1.setBackground(new java.awt.Color(248, 249, 254));

        background.setBackground(new java.awt.Color(255, 255, 255));

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setLayout(new java.awt.CardLayout());

        AdminUserProfile.setBackground(new java.awt.Color(255, 255, 255));

        btnNextUserPanel.setBackground(new java.awt.Color(69, 125, 88));
        btnNextUserPanel.setForeground(new java.awt.Color(255, 255, 255));
        btnNextUserPanel.setText("Next");
        btnNextUserPanel.setFont(fnt(15f));
        btnNextUserPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextUserPanelActionPerformed(evt);
            }
        });

        lblFirstname.setFont(fnt(16f));
        lblFirstname.setText("Firstname");

        lblLastname.setFont(fnt(16f));
        lblLastname.setText("Lastname");

        txtFirstname.setForeground(Frame.textInput);
        txtFirstname.setText("Enter Firstname");
        txtFirstname.setFont(fnt(14f));

        sepFirstname.setForeground(Frame.textInput);

        txtLastname.setForeground(Frame.textInput);
        txtLastname.setText("Enter Lastname");
        txtLastname.setFont(fnt(14f));

        sepLastname.setForeground(Frame.textInput);

        lblStreet.setFont(fnt(16f));
        lblStreet.setText("Street");

        lblHousenumber.setFont(fnt(16f));
        lblHousenumber.setText("Housenumber");

        lblZipcode.setFont(fnt(16f));
        lblZipcode.setText("Zipcode");

        lblCity.setFont(fnt(16f));
        lblCity.setText("City");

        txtStreet.setForeground(Frame.textInput);
        txtStreet.setText("Enter Street");
        txtStreet.setFont(fnt(14f));

        sepStreet.setForeground(Frame.textInput);

        txtHousenumber.setForeground(Frame.textInput);
        txtHousenumber.setText("123");
        txtHousenumber.setFont(fnt(14f));

        sepHousenumber.setForeground(Frame.textInput);

        txtZipcode.setForeground(Frame.textInput);
        txtZipcode.setText("12345");
        txtZipcode.setFont(fnt(14f));

        sepZipcode.setForeground(Frame.textInput);

        txtCity.setForeground(Frame.textInput);
        txtCity.setText("Enter City");
        txtCity.setFont(fnt(14f));

        sepCity.setForeground(Frame.textInput);

        lblGender.setFont(fnt(16f));
        lblGender.setText("Gender");

        groupGender.add(jRadioMale);
        jRadioMale.setFont(fnt(16f));
        jRadioMale.setText("male");
        jRadioMale.setOpaque(false);

        groupGender.add(jRadioFemale);
        jRadioFemale.setFont(fnt(16f));
        jRadioFemale.setText("female");
        jRadioFemale.setOpaque(false);

        groupGender.add(jRadioDiverse);
        jRadioDiverse.setFont(fnt(16f));
        jRadioDiverse.setText("diverse");
        jRadioDiverse.setOpaque(false);

        lblDateOfBirth.setFont(fnt(16f));
        lblDateOfBirth.setText("Date of Birth");

        txtDateOfBirth.setForeground(Frame.textInput);
        txtDateOfBirth.setText("01.01.1990");
        txtDateOfBirth.setFont(fnt(14f));

        sepDateOfBirth.setForeground(Frame.textInput);

        lblErrorUserPanel.setFont(fnt(16f));
        lblErrorUserPanel.setForeground(new java.awt.Color(205, 61, 100));
        lblErrorUserPanel.setText("Missing Values");

        btnPDFExport.setBackground(new java.awt.Color(15, 95, 83));
        btnPDFExport.setForeground(new java.awt.Color(255, 255, 255));
        btnPDFExport.setText("Export Profil as PDF");
        btnPDFExport.setFont(fnt(15f));
        btnPDFExport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnPDFExportMousePressed(evt);
            }
        });

        javax.swing.GroupLayout AdminUserProfileLayout = new javax.swing.GroupLayout(AdminUserProfile);
        AdminUserProfile.setLayout(AdminUserProfileLayout);
        AdminUserProfileLayout.setHorizontalGroup(
            AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdminUserProfileLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdminUserProfileLayout.createSequentialGroup()
                        .addComponent(btnPDFExport, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNextUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AdminUserProfileLayout.createSequentialGroup()
                        .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AdminUserProfileLayout.createSequentialGroup()
                                .addComponent(lblErrorUserPanel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(AdminUserProfileLayout.createSequentialGroup()
                                .addComponent(lblGender)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioMale)
                                .addGap(34, 34, 34)
                                .addComponent(jRadioFemale)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioDiverse))
                            .addGroup(AdminUserProfileLayout.createSequentialGroup()
                                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(sepFirstname, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtFirstname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                                    .addComponent(lblFirstname))
                                .addGap(13, 13, 13)
                                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AdminUserProfileLayout.createSequentialGroup()
                                        .addComponent(lblLastname)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtLastname, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                                    .addComponent(sepLastname)))
                            .addGroup(AdminUserProfileLayout.createSequentialGroup()
                                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblStreet, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStreet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                    .addComponent(sepStreet, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AdminUserProfileLayout.createSequentialGroup()
                                        .addComponent(lblZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblCity)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AdminUserProfileLayout.createSequentialGroup()
                                        .addComponent(lblHousenumber)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtHousenumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sepHousenumber)))
                            .addGroup(AdminUserProfileLayout.createSequentialGroup()
                                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(sepZipcode, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtZipcode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                                .addGap(26, 26, 26)
                                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sepCity)))
                            .addGroup(AdminUserProfileLayout.createSequentialGroup()
                                .addComponent(lblDateOfBirth)
                                .addGap(123, 123, 123)
                                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sepDateOfBirth)
                                    .addComponent(txtDateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE))))
                        .addContainerGap())))
        );
        AdminUserProfileLayout.setVerticalGroup(
            AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdminUserProfileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstname)
                    .addComponent(lblLastname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AdminUserProfileLayout.createSequentialGroup()
                        .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sepFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sepLastname, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStreet)
                            .addComponent(lblHousenumber))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHousenumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(sepStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sepHousenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblZipcode)
                    .addComponent(lblCity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sepZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sepCity, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(jRadioFemale)
                    .addComponent(jRadioMale)
                    .addComponent(jRadioDiverse))
                .addGap(34, 34, 34)
                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateOfBirth)
                    .addComponent(txtDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sepDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(lblErrorUserPanel)
                .addGap(27, 27, 27)
                .addGroup(AdminUserProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNextUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPDFExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        mainPanel.add(AdminUserProfile, "userPanel");

        healthPanel.setBackground(new java.awt.Color(255, 255, 255));

        btnBackHealthPanel.setBackground(new java.awt.Color(204, 204, 204));
        btnBackHealthPanel.setText("Back");
        btnBackHealthPanel.setFont(fnt(15f));
        btnBackHealthPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBackHealthPanelMousePressed(evt);
            }
        });

        lblInsurancename.setFont(fnt(16f));
        lblInsurancename.setText("Insurancename");

        txtInsurancename.setForeground(Frame.textInput);
        txtInsurancename.setText("Enter Insurancename");
        txtInsurancename.setFont(fnt(14f));

        sepInsurancename.setForeground(Frame.textInput);

        lblInsurancetype.setFont(fnt(16f));
        lblInsurancetype.setText("Insurancetype");

        groupInsuranceType.add(jRadioPublic);
        jRadioPublic.setFont(fnt(16f));
        jRadioPublic.setText("public");
        jRadioPublic.setOpaque(false);
        jRadioPublic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jRadioPublicMousePressed(evt);
            }
        });

        groupInsuranceType.add(jRadioPrivate);
        jRadioPrivate.setFont(fnt(16f));
        jRadioPrivate.setText("private");
        jRadioPrivate.setOpaque(false);
        jRadioPrivate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jRadioPrivateMousePressed(evt);
            }
        });

        lblHealthInformation.setFont(fnt(16f));
        lblHealthInformation.setText("Health Information");

        txtHealthInformation.setColumns(20);
        txtHealthInformation.setFont(fnt(14f));
        txtHealthInformation.setForeground(Frame.textInput);
        txtHealthInformation.setRows(5);
        jScrollPane1.setViewportView(txtHealthInformation);

        lblErrorHealthPanel.setFont(fnt(16f));
        lblErrorHealthPanel.setForeground(new java.awt.Color(205, 61, 100));
        lblErrorHealthPanel.setText("Missing Values");

        btnNextHealthPanel.setBackground(new java.awt.Color(69, 125, 88));
        btnNextHealthPanel.setForeground(new java.awt.Color(255, 255, 255));
        btnNextHealthPanel.setText("Next");
        btnNextHealthPanel.setFont(fnt(15f));
        btnNextHealthPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnNextHealthPanelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout healthPanelLayout = new javax.swing.GroupLayout(healthPanel);
        healthPanel.setLayout(healthPanelLayout);
        healthPanelLayout.setHorizontalGroup(
            healthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(healthPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(healthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(healthPanelLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(healthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, healthPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addContainerGap())
                            .addGroup(healthPanelLayout.createSequentialGroup()
                                .addComponent(lblInsurancename)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(healthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sepInsurancename)
                                    .addComponent(txtInsurancename, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                                .addContainerGap())
                            .addGroup(healthPanelLayout.createSequentialGroup()
                                .addComponent(lblInsurancetype)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 191, Short.MAX_VALUE)
                                .addComponent(jRadioPublic)
                                .addGap(34, 34, 34)
                                .addComponent(jRadioPrivate)
                                .addGap(39, 39, 39))
                            .addGroup(healthPanelLayout.createSequentialGroup()
                                .addGroup(healthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblErrorHealthPanel)
                                    .addComponent(lblHealthInformation))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(healthPanelLayout.createSequentialGroup()
                        .addComponent(btnBackHealthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNextHealthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        healthPanelLayout.setVerticalGroup(
            healthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, healthPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(healthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInsurancename)
                    .addComponent(txtInsurancename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sepInsurancename, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(healthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInsurancetype)
                    .addComponent(jRadioPrivate)
                    .addComponent(jRadioPublic))
                .addGap(32, 32, 32)
                .addComponent(lblHealthInformation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(lblErrorHealthPanel)
                .addGap(26, 26, 26)
                .addGroup(healthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBackHealthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNextHealthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        mainPanel.add(healthPanel, "healthPanel");

        accessDataPanel.setBackground(new java.awt.Color(255, 255, 255));

        btnBackaccessDataPanel.setBackground(new java.awt.Color(204, 204, 204));
        btnBackaccessDataPanel.setText("Back");
        btnBackaccessDataPanel.setFont(fnt(15f));
        btnBackaccessDataPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBackaccessDataPanelMousePressed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(69, 125, 88));
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.setFont(fnt(15f));
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnUpdateMousePressed(evt);
            }
        });

        sepEmail.setForeground(Frame.textInput);

        sepPasswordConfirm.setForeground(Frame.textInput);

        lblEmail.setFont(fnt(16f));
        lblEmail.setText("Email");

        txtPasswordConfirm.setForeground(Frame.textInput);
        txtPasswordConfirm.setText("Enter Password again");
        txtPasswordConfirm.setFont(fnt(14f));

        lblPasswordConfirm.setFont(fnt(16f));
        lblPasswordConfirm.setText("Confirm Password");

        txtEmail.setForeground(Frame.textInput);
        txtEmail.setText("Enter Email");
        txtEmail.setFont(fnt(14f));

        lblUsername.setFont(fnt(16f));
        lblUsername.setText("Username");

        txtUsername.setForeground(Frame.textInput);
        txtUsername.setText("Enter Username");
        txtUsername.setFont(fnt(14f));

        lblPassword.setFont(fnt(16f));
        lblPassword.setText("Password");

        txtPassword.setForeground(Frame.textInput);
        txtPassword.setFont(fnt(14f));

        sepPassword.setForeground(Frame.textInput);

        sepUsername.setForeground(Frame.textInput);

        lblErroraccessDataPanel.setFont(fnt(16f));
        lblErroraccessDataPanel.setForeground(new java.awt.Color(205, 61, 100));
        lblErroraccessDataPanel.setText("Missing Values");

        javax.swing.GroupLayout accessDataPanelLayout = new javax.swing.GroupLayout(accessDataPanel);
        accessDataPanel.setLayout(accessDataPanelLayout);
        accessDataPanelLayout.setHorizontalGroup(
            accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accessDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBackaccessDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(accessDataPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accessDataPanelLayout.createSequentialGroup()
                        .addComponent(lblErroraccessDataPanel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(accessDataPanelLayout.createSequentialGroup()
                        .addGroup(accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblUsername)
                                .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sepUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblPassword)
                                .addComponent(sepPassword)
                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                        .addGroup(accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblEmail)
                                .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sepEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblPasswordConfirm)
                                .addComponent(txtPasswordConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sepPasswordConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))))
        );
        accessDataPanelLayout.setVerticalGroup(
            accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accessDataPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, accessDataPanelLayout.createSequentialGroup()
                        .addComponent(lblUsername)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sepUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblPassword)
                        .addGap(11, 11, 11)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sepPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(accessDataPanelLayout.createSequentialGroup()
                        .addComponent(lblEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sepEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(accessDataPanelLayout.createSequentialGroup()
                                .addGroup(accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(accessDataPanelLayout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(txtPasswordConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblPasswordConfirm))
                                .addGap(23, 23, 23))
                            .addComponent(sepPasswordConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(46, 46, 46)
                .addComponent(lblErroraccessDataPanel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addGroup(accessDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBackaccessDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        mainPanel.add(accessDataPanel, "accessDataPanel");

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 506, Short.MAX_VALUE)
            .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(backgroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 511, Short.MAX_VALUE)
            .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(backgroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        lblHeader.setFont(fnt(22f));
        lblHeader.setText("Admin");

        choosePanel.setBackground(new java.awt.Color(255, 255, 255));

        chooserProfil.setFont(fnt(12f));
        chooserProfil.setOpaque(false);
        chooserProfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooserProfilActionPerformed(evt);
            }
        });

        lblSelectUser.setFont(fnt(16f));
        lblSelectUser.setText("Select User");

        btnDelete.setBackground(new java.awt.Color(205, 61, 100));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setFont(fnt(15f));
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDeleteMousePressed(evt);
            }
        });

        javax.swing.GroupLayout choosePanelLayout = new javax.swing.GroupLayout(choosePanel);
        choosePanel.setLayout(choosePanelLayout);
        choosePanelLayout.setHorizontalGroup(
            choosePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(choosePanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(choosePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(choosePanelLayout.createSequentialGroup()
                        .addComponent(lblSelectUser)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(choosePanelLayout.createSequentialGroup()
                        .addComponent(chooserProfil, 0, 151, Short.MAX_VALUE)
                        .addGap(25, 25, 25))))
            .addGroup(choosePanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        choosePanelLayout.setVerticalGroup(
            choosePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(choosePanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblSelectUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chooserProfil, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(choosePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(lblHeader)))
                .addContainerGap(258, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeader)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(choosePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1033, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 12, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 13, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 574, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Switch to the next Tab of the mainPanel
     * @param evt 
     */
    private void btnNextUserPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextUserPanelActionPerformed
        if(chooserProfil.getSelectedItem().toString().equals("---")){
            return;
        }
        lblErrorUserPanel.setVisible(false);
        if(txtFirstname.getText().length() == 0 || !txtFirstname.getReset()){
            lblErrorUserPanel.setText("Firstname is missing");
            lblErrorUserPanel.setVisible(true);
            return;
        }

        if(txtLastname.getText().length() == 0 || !txtLastname.getReset()){
            lblErrorUserPanel.setText("Lastname is missing");
            lblErrorUserPanel.setVisible(true);
            return;
        }

        if(txtStreet.getText().length() == 0 || !txtStreet.getReset()){
            lblErrorUserPanel.setText("Street is missing");
            lblErrorUserPanel.setVisible(true);
            return;
        }

        if(txtHousenumber.getText().length() == 0 || !txtHousenumber.getReset()){
            lblErrorUserPanel.setText("Housenumber is missing");
            lblErrorUserPanel.setVisible(true);
            return;
        }

        if(txtZipcode.getText().length() == 0 || !txtZipcode.getReset()){
            lblErrorUserPanel.setText("Zipcode is missing");
            lblErrorUserPanel.setVisible(true);
            return;
        }

        if(txtCity.getText().length() == 0 || !txtCity.getReset()){
            lblErrorUserPanel.setText("City is missing");
            lblErrorUserPanel.setVisible(true);
            return;
        }

        if(!jRadioMale.isSelected() && !jRadioFemale.isSelected() && !jRadioDiverse.isSelected()){
            lblErrorUserPanel.setText("Gender is missing");
            lblErrorUserPanel.setVisible(true);
            return;
        }

        if(txtDateOfBirth.getText().length() == 0 || !txtDateOfBirth.getReset()){
            lblErrorUserPanel.setText("Date of Birth is missing");
            lblErrorUserPanel.setVisible(true);
            return;
        }

       try{
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("d.MM.yyyy");
            newUser.setDateofbirth(LocalDate.parse(txtDateOfBirth.getText(), formatter));
        }catch(Exception ex){
            lblErrorUserPanel.setText("Date of Birth is in the Wrong Format (dd.mm.yyyy)");
            lblErrorUserPanel.setVisible(true);
            return;
        }
       
        newUser.setFirstname(txtFirstname.getText());
        newUser.setLastname(txtLastname.getText());
        newUser.setStreet(txtStreet.getText());
        newUser.setHousenumber(txtHousenumber.getText());
        newUser.setZipcode(txtZipcode.getText());
        newUser.setCity(txtCity.getText());

        if(jRadioMale.isSelected()){
            newUser.setGender("m");
        }else if(jRadioFemale.isSelected()){
            newUser.setGender("f");
        }else{
            newUser.setGender("d");
        }
        
        if(!googlemaps.getLatLong(newUser)){
            lblErrorUserPanel.setText("Address dosent exist");
            lblErrorUserPanel.setVisible(true);
            return;
        }
        
        card.next(mainPanel);
    }//GEN-LAST:event_btnNextUserPanelActionPerformed
    /**
     * Export Profil as PDF
     * @param evt 
     */
    private void btnPDFExportMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPDFExportMousePressed
        btnPDFExport.setText("Export Profil as PDF");
        JFileChooser f = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PDF Document","pdf");
        File workingDirectory = new File(System.getProperty("user.dir"));
        f.setSelectedFile(new File("HealthInformation.pdf"));
        f.setCurrentDirectory(workingDirectory);
        f.setFileFilter(filter);
        int selection = f.showSaveDialog(this);
        if(selection == JFileChooser.APPROVE_OPTION){
            pdf pdf = new pdf();
            if(pdf.create(newUser, f.getSelectedFile())){
                btnPDFExport.setText("Exported successfully");
            }else{
                lblErrorUserPanel.setText("Error cant export Profil");
                lblErrorUserPanel.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnPDFExportMousePressed
    /**
     * Go back to the previous Tab of the mainPanel
     * @param evt 
     */
    private void btnBackHealthPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackHealthPanelMousePressed
        card.previous(mainPanel);
    }//GEN-LAST:event_btnBackHealthPanelMousePressed
    /**
     * Enable txtInsurancename when a public insurance is selected
     * @param evt 
     */
    private void jRadioPublicMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioPublicMousePressed
        txtInsurancename.setEnabled(true);
    }//GEN-LAST:event_jRadioPublicMousePressed
    /**
     * Disable txtInsurancename when a private is selected
     * @param evt 
     */
    private void jRadioPrivateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioPrivateMousePressed
        txtInsurancename.setEnabled(false);
        txtInsurancename.setText("");
    }//GEN-LAST:event_jRadioPrivateMousePressed
    /**
     * Go back to the previous Tab of the mainPanel
     * @param evt 
     */
    private void btnBackaccessDataPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackaccessDataPanelMousePressed
        card.previous(mainPanel);
    }//GEN-LAST:event_btnBackaccessDataPanelMousePressed
    /**
     * Update the User
     * @param evt 
     */
    private void btnUpdateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMousePressed
        lblErroraccessDataPanel.setVisible(false);
        if(txtUsername.getText().length() == 0 || !txtUsername.getReset()){
            lblErroraccessDataPanel.setText("Username is missing");
            lblErroraccessDataPanel.setVisible(true);
            return;
        }

        if(txtEmail.getText().length() == 0 || !txtEmail.getReset()){
            lblErroraccessDataPanel.setText("Email is missing");
            lblErroraccessDataPanel.setVisible(true);
            return;
        }
        
        if(txtPassword.getReset()|| txtPasswordConfirm.getReset()){
           if(txtPassword.getPassword().length == 0 || txtPasswordConfirm.getPassword().length == 0){
               lblErroraccessDataPanel.setText("Password or Confirm Password is missing");
               lblErroraccessDataPanel.setVisible(true);
               return;
           }

           if(!new String(txtPassword.getPassword()).equals(new String(txtPasswordConfirm.getPassword()))){
               lblErroraccessDataPanel.setText("The Passwords are not equal");
               lblErroraccessDataPanel.setVisible(true);
               return;
           }   
           newUser.setPassword(password.getHash(new String(txtPassword.getPassword())));
        }
        btnUpdate.setEnabled(false);
        btnUpdate.setText("Update ....");

        if(!database.checkAvailable(txtUsername.getText(), txtEmail.getText()) && !txtUsername.getText().equals(newUser.getUsername())){
            btnUpdate.setText("Update");
            btnUpdate.setEnabled(true);
            lblErroraccessDataPanel.setText("Username or Email are not available");
            lblErroraccessDataPanel.setVisible(true);
            return;
        }
        newUser.setUsername(txtUsername.getText());
        newUser.setEmail(txtEmail.getText());

        if(!database.updateUser(newUser)){
            btnUpdate.setText("Update");
            btnUpdate.setEnabled(true);
            lblErroraccessDataPanel.setText("Cant update your Data");
            lblErroraccessDataPanel.setVisible(true);
            return;
        }
        btnUpdate.setText("Update");
        btnUpdate.setEnabled(true);
        lblErroraccessDataPanel.setText("Successfully updated your Data");
        lblErroraccessDataPanel.setForeground(new java.awt.Color(69, 125, 88));
        lblErroraccessDataPanel.setVisible(true);
    }//GEN-LAST:event_btnUpdateMousePressed
    /**
     * Delete selected user
     * @param evt 
     */
    private void btnDeleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMousePressed
        new Alert(this,newUser).setVisible(true);
    }//GEN-LAST:event_btnDeleteMousePressed
    /**
     * Update Tabs with new selected user
     * @param evt 
     */
    private void chooserProfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooserProfilActionPerformed
        if(!loaded){
            return;
        }
        if(chooserProfil.getSelectedItem().toString().equals("---")){
            mainPanel.setVisible(false);
            background.setBackground(new Color(248,249,254));
            btnDelete.setVisible(false);
            return;
        }
        if(chooserProfil.getSelectedItem().toString().equals(loginUser.getUsername())){
            btnDelete.setVisible(false);
        }
        newUser = database.getUser(chooserProfil.getSelectedItem().toString());
        lblErrorUserPanel.setVisible(false);
        lblErrorHealthPanel.setVisible(false);
        lblErroraccessDataPanel.setVisible(false);
        lblErroraccessDataPanel.setForeground(new java.awt.Color(205, 61, 100));
        btnPDFExport.setText("Export Profil as PDF");
        
        txtFirstname.setReset(true);
        txtFirstname.setText(newUser.getFirstname());
        
        txtLastname.setReset(true);
        txtLastname.setText(newUser.getLastname());
        
        txtStreet.setReset(true);
        txtStreet.setText(newUser.getStreet());
        
        txtHousenumber.setReset(true);
        txtHousenumber.setText(newUser.getHousenumber());
        
        txtZipcode.setReset(true);
        txtZipcode.setText(newUser.getZipcode());
        
        txtCity.setReset(true);
        txtCity.setText(newUser.getCity());
        
        if("m".equals(newUser.getGender())){
            jRadioMale.setSelected(true);
        }else if("f".equals(newUser.getGender())){
            jRadioFemale.setSelected(true);
        }else{
            jRadioDiverse.setSelected(true);
        }
        
        txtDateOfBirth.setReset(true);
        LocalDate dateofbirth = newUser.getDateofbirth();
        int monthINT = dateofbirth.getMonthValue();
        String month = String.valueOf(monthINT);
        if(monthINT < 10){
            month = "0"+month;
        }
        txtDateOfBirth.setText(String.valueOf(dateofbirth.getDayOfMonth())+"."+month+"."+String.valueOf(dateofbirth.getYear()));
        
        txtInsurancename.setReset(true);
        txtInsurancename.setText(newUser.getInsurancename());
        
        if("public".equals(newUser.getInsurancetype())){
            jRadioPublic.setSelected(true);
        }else{
           txtInsurancename.setEnabled(false);
           jRadioPrivate.setSelected(true);
        }
        
        txtHealthInformation.setText(newUser.getHealthinformation());
        
        txtUsername.setReset(true);
        txtUsername.setText(newUser.getUsername());
        
        txtEmail.setReset(true);
        txtEmail.setText(newUser.getEmail());
        mainPanel.setVisible(true);
        background.setBackground(new Color(255,255,255));
        if(!chooserProfil.getSelectedItem().toString().equals(loginUser.getUsername())){
            btnDelete.setVisible(true);
        }
    }//GEN-LAST:event_chooserProfilActionPerformed
    /**
     * Switch to the next Tab of the mainPanel
     * @param evt 
     */
    private void btnNextHealthPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNextHealthPanelMousePressed
        lblErrorHealthPanel.setVisible(false);

        if(!jRadioPublic.isSelected() && !jRadioPrivate.isSelected()){
            lblErrorHealthPanel.setText("Insurancetype is missing");
            lblErrorHealthPanel.setVisible(true);
            return;
        }

        newUser.setInsurancename(txtInsurancename.getText());
        if(jRadioPublic.isSelected()){
            if(txtInsurancename.getText().length() == 0 || !txtInsurancename.getReset()){
                lblErrorHealthPanel.setText("Insurancename is missing");
                lblErrorHealthPanel.setVisible(true);
                return;
            }
            newUser.setInsurancetype("public");
        }else{
            newUser.setInsurancetype("private");
        }

        newUser.setHealthinformation(txtHealthInformation.getText());

        card.next(mainPanel);
    }//GEN-LAST:event_btnNextHealthPanelMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdminUserProfile;
    private javax.swing.JPanel accessDataPanel;
    private src.frames.components.background background;
    private src.frames.components.button btnBackHealthPanel;
    private src.frames.components.button btnBackaccessDataPanel;
    private src.frames.components.button btnDelete;
    private src.frames.components.button btnNextHealthPanel;
    private src.frames.components.button btnNextUserPanel;
    private src.frames.components.button btnPDFExport;
    private src.frames.components.button btnUpdate;
    private src.frames.components.background choosePanel;
    private javax.swing.JComboBox<String> chooserProfil;
    private javax.swing.ButtonGroup groupGender;
    private javax.swing.ButtonGroup groupInsuranceType;
    private javax.swing.JPanel healthPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioDiverse;
    private javax.swing.JRadioButton jRadioFemale;
    private javax.swing.JRadioButton jRadioMale;
    private javax.swing.JRadioButton jRadioPrivate;
    private javax.swing.JRadioButton jRadioPublic;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDateOfBirth;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblErrorHealthPanel;
    private javax.swing.JLabel lblErrorUserPanel;
    private javax.swing.JLabel lblErroraccessDataPanel;
    private javax.swing.JLabel lblFirstname;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblHealthInformation;
    private javax.swing.JLabel lblHousenumber;
    private javax.swing.JLabel lblInsurancename;
    private javax.swing.JLabel lblInsurancetype;
    private javax.swing.JLabel lblLastname;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPasswordConfirm;
    private javax.swing.JLabel lblSelectUser;
    private javax.swing.JLabel lblStreet;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblZipcode;
    public javax.swing.JPanel mainPanel;
    private javax.swing.JSeparator sepCity;
    private javax.swing.JSeparator sepDateOfBirth;
    private javax.swing.JSeparator sepEmail;
    private javax.swing.JSeparator sepFirstname;
    private javax.swing.JSeparator sepHousenumber;
    private javax.swing.JSeparator sepInsurancename;
    private javax.swing.JSeparator sepLastname;
    private javax.swing.JSeparator sepPassword;
    private javax.swing.JSeparator sepPasswordConfirm;
    private javax.swing.JSeparator sepStreet;
    private javax.swing.JSeparator sepUsername;
    private javax.swing.JSeparator sepZipcode;
    private src.frames.components.textfield txtCity;
    private src.frames.components.textfield txtDateOfBirth;
    private src.frames.components.textfield txtEmail;
    private src.frames.components.textfield txtFirstname;
    private javax.swing.JTextArea txtHealthInformation;
    private src.frames.components.textfield txtHousenumber;
    private src.frames.components.textfield txtInsurancename;
    private src.frames.components.textfield txtLastname;
    private src.frames.components.passwordfield txtPassword;
    private src.frames.components.passwordfield txtPasswordConfirm;
    private src.frames.components.textfield txtStreet;
    private src.frames.components.textfield txtUsername;
    private src.frames.components.textfield txtZipcode;
    // End of variables declaration//GEN-END:variables
}
